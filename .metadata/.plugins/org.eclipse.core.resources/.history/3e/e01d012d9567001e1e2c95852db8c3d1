package com.codemind.PlayCenter.security;

import com.codemind.PlayCenter.service.UserService;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.authentication.dao.DaoAuthenticationProvider;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configurers.LogoutConfigurer;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
public class NMPCSecurity {

    @Bean
    public BCryptPasswordEncoder bCryptPasswordEncoder() {
        return new BCryptPasswordEncoder();
    }


    @Bean
    public DaoAuthenticationProvider daoAuthenticationProvider(UserService userService) {

        DaoAuthenticationProvider auth = new DaoAuthenticationProvider();
        auth.setUserDetailsService(userService);
        auth.setPasswordEncoder(bCryptPasswordEncoder());
        return auth;

    }

    @Bean
    public SecurityFilterChain securityFilterChain(HttpSecurity httpSecurity) throws Exception {

        httpSecurity.authorizeHttpRequests(configurer ->

                        configurer
                                .requestMatchers("/nmpc-home", "/loginPage", "/explore/**", "/contact/**", "/images/**", "/css/**", "/js/**","/register/**","/forgot/**","/reset").permitAll() // Allow access to static resources
                                .requestMatchers("/dashboard/show-user").hasRole("ADMIN")
                                .anyRequest().authenticated()

                )
                .formLogin(form ->

                        form
                                .loginPage("/loginPage")
                                .loginProcessingUrl("/authenticateUser")
                                .successHandler(new CustomAuthenticationSuccessHandler())
                                .permitAll()
                )
                .logout(LogoutConfigurer::permitAll)
                .logout((logout) -> logout.logoutUrl("/nmpc-home"));

        return httpSecurity.build();
    }

}
